ipq <- read.csv(file="P:\\Project_Sezen\\data_processing\\IPQ\\ipq_long.csv", header=TRUE, sep=";")
nr_of_subjects <- 10
# add factor
questions <- rep(c("G1", "SP4", "INV1", "REAL2"), nr_of_subjects)
ipq$questions <- questions
library(tidyr)
ipq_long <- gather(ipq, condition, ipq_score, ems:visual, factor_key=TRUE)
# select only G1
this_question <- c("REAL2")
ipq_single_question <- ipq_long[ipq_long$questions %in% this_question,]
# ANOVA
fit <- aov(ipq_score ~ condition + questions + condition*questions, data=ipq_long)
summary(fit)
# ANOVA
fit <- aov(ipq_score ~ condition + questions + condition*questions, data=ipq_single_question)
summary(fit)
ipq_single_question
# ANOVA
fit <- aov(ipq_score ~ condition, data=ipq_single_question)
summary(fit)
ipq_long$condition <- factor(ipq_long$condition, levels = rev(levels(ipq_long$condition)))
ipq <- ggplot(ipq_long, aes(x = condition,
y = ipq_score))+#, fill = condition, colour = condition, shape = condition)) +
#geom_line(aes(group=subject), colour="grey10", size=.5, alpha=.2) +
ggbeeswarm::geom_quasirandom(alpha = .4,
shape = 22,
colour = "grey10",
fill = "#185994",
size = 2.3,
width = .1) +
geom_boxplot(colour="grey10", fill = "#185994", alpha=.2, outlier.shape = NA) +
facet_grid(.~questions) +
theme_bw() +
theme(legend.position = "none") +
theme(axis.title.y = element_text(colour="grey20",size=12),
axis.title.x = element_text(colour="grey20",size=12),
axis.text.x = element_text(colour="grey20",size=11),
axis.text.y = element_text(colour="grey20",size=11)) +
ylab(ylab_title) +
xlab(xlab_title) +
stat_compare_means(comparisons = my_comparisons) +
ylim(1, 7)
ipq
ipq
ipq
ipq <- ggplot(ipq_long, aes(x = condition,
y = ipq_score))+#, fill = condition, colour = condition, shape = condition)) +
#geom_line(aes(group=subject), colour="grey10", size=.5, alpha=.2) +
ggbeeswarm::geom_quasirandom(alpha = .4,
shape = 22,
colour = "grey10",
fill = "#185994",
size = 2.3,
width = .1) +
geom_boxplot(colour="grey10", fill = "#185994", alpha=.2, outlier.shape = NA) +
facet_grid(.~questions) +
theme_bw() +
theme(legend.position = "none") +
theme(axis.title.y = element_text(colour="grey20",size=12),
axis.title.x = element_text(colour="grey20",size=12),
axis.text.x = element_text(colour="grey20",size=11),
axis.text.y = element_text(colour="grey20",size=11)) +
ylab(ylab_title) +
xlab(xlab_title) +
stat_compare_means(comparisons = my_comparisons) +
ylim(1, 7)
ipq
library("ggplot2", lib.loc="~/R/win-library/3.5")
ipq <- ggplot(ipq_long, aes(x = condition,
y = ipq_score))+#, fill = condition, colour = condition, shape = condition)) +
#geom_line(aes(group=subject), colour="grey10", size=.5, alpha=.2) +
ggbeeswarm::geom_quasirandom(alpha = .4,
shape = 22,
colour = "grey10",
fill = "#185994",
size = 2.3,
width = .1) +
geom_boxplot(colour="grey10", fill = "#185994", alpha=.2, outlier.shape = NA) +
facet_grid(.~questions) +
theme_bw() +
theme(legend.position = "none") +
theme(axis.title.y = element_text(colour="grey20",size=12),
axis.title.x = element_text(colour="grey20",size=12),
axis.text.x = element_text(colour="grey20",size=11),
axis.text.y = element_text(colour="grey20",size=11)) +
ylab(ylab_title) +
xlab(xlab_title) +
stat_compare_means(comparisons = my_comparisons) +
ylim(1, 7)
ipq
### plot
# Boxplot Duration
# specify title, labs titles, legend title
ylab_title <- 'ipq score'
xlab_title <- 'feedback condition'
ipq_long$condition <- factor(ipq_long$condition, levels = rev(levels(ipq_long$condition)))
ipq <- ggplot(ipq_long, aes(x = condition,
y = ipq_score))+#, fill = condition, colour = condition, shape = condition)) +
#geom_line(aes(group=subject), colour="grey10", size=.5, alpha=.2) +
ggbeeswarm::geom_quasirandom(alpha = .4,
shape = 22,
colour = "grey10",
fill = "#185994",
size = 2.3,
width = .1) +
geom_boxplot(colour="grey10", fill = "#185994", alpha=.2, outlier.shape = NA) +
facet_grid(.~questions) +
theme_bw() +
theme(legend.position = "none") +
theme(axis.title.y = element_text(colour="grey20",size=12),
axis.title.x = element_text(colour="grey20",size=12),
axis.text.x = element_text(colour="grey20",size=11),
axis.text.y = element_text(colour="grey20",size=11)) +
ylab(ylab_title) +
xlab(xlab_title) +
stat_compare_means(comparisons = my_comparisons) +
ylim(1, 7)
ipq
# significance testing
library(ggpubr)
my_comparisons <- list(c("ems, vibro"), c("ems, visual"), c("vibro, visual"))
### plot
# Boxplot Duration
# specify title, labs titles, legend title
ylab_title <- 'ipq score'
xlab_title <- 'feedback condition'
ipq_long$condition <- factor(ipq_long$condition, levels = rev(levels(ipq_long$condition)))
ipq <- ggplot(ipq_long, aes(x = condition,
y = ipq_score))+#, fill = condition, colour = condition, shape = condition)) +
#geom_line(aes(group=subject), colour="grey10", size=.5, alpha=.2) +
ggbeeswarm::geom_quasirandom(alpha = .4,
shape = 22,
colour = "grey10",
fill = "#185994",
size = 2.3,
width = .1) +
geom_boxplot(colour="grey10", fill = "#185994", alpha=.2, outlier.shape = NA) +
facet_grid(.~questions) +
theme_bw() +
theme(legend.position = "none") +
theme(axis.title.y = element_text(colour="grey20",size=12),
axis.title.x = element_text(colour="grey20",size=12),
axis.text.x = element_text(colour="grey20",size=11),
axis.text.y = element_text(colour="grey20",size=11)) +
ylab(ylab_title) +
xlab(xlab_title) +
stat_compare_means(comparisons = my_comparisons) +
ylim(1, 7)
ipq
